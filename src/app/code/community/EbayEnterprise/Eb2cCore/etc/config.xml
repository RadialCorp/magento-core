<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2013-2014 eBay Enterprise, Inc.

NOTICE OF LICENSE

This source file is subject to the Open Software License (OSL 3.0)
that is bundled with this package in the file LICENSE.md.
It is also available through the world-wide-web at this URL:
http://opensource.org/licenses/osl-3.0.php

@copyright   Copyright (c) 2013-2014 eBay Enterprise, Inc. (http://www.ebayenterprise.com/)
@license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
-->
<config>
    <modules>
        <EbayEnterprise_Eb2cCore>
            <version>0.9.0</version>
        </EbayEnterprise_Eb2cCore>
    </modules>
    <global>
        <models>
            <eb2ccore>
                <class>EbayEnterprise_Eb2cCore_Model</class>
            </eb2ccore>
        </models>
        <helpers>
            <eb2ccore>
                <class>EbayEnterprise_Eb2cCore_Helper</class>
            </eb2ccore>
        </helpers>
        <blocks>
            <eb2ccore>
                <class>EbayEnterprise_Eb2cCore_Block</class>
            </eb2ccore>
        </blocks>
        <events>
            <sales_quote_collect_totals_before>
                <observers>
                    <eb2ccore_update_quote_session>
                        <class>EbayEnterprise_Eb2cCore_Model_Observer</class>
                        <method>checkQuoteForChanges</method>
                        <type>singleton</type>
                    </eb2ccore_update_quote_session>
                </observers>
            </sales_quote_collect_totals_before>
            <sales_quote_collect_totals_after>
                <observers>
                    <eb2ccore_address_discount_observer>
                        <class>eb2ccore/observer</class>
                        <method>handleSalesQuoteCollectTotalsAfter</method>
                    </eb2ccore_address_discount_observer>
                </observers>
            </sales_quote_collect_totals_after>
            <salesrule_validator_process>
                <observers>
                    <ebayenterprise_salesrule_discount_observer>
                        <class>eb2ccore/observer</class>
                        <method>handleSalesRuleValidatorProcess</method>
                    </ebayenterprise_salesrule_discount_observer>
                </observers>
            </salesrule_validator_process>
            <sales_order_place_before>
                <observers>
                    <eb2ccore_place_exchange_platform_order>
                        <class>eb2ccore/observer</class>
                        <method>processExchangePlatformOrder</method>
                        <type>singleton</type>
                    </eb2ccore_place_exchange_platform_order>
                </observers>
            </sales_order_place_before>
            <sales_model_service_quote_submit_failure>
                <observers>
                    <eb2ccore_rollback_order_failuer>
                        <class>eb2ccore/observer</class>
                        <method>rollbackExchangePlatformOrder</method>
                        <type>singleton</type>
                    </eb2ccore_rollback_order_failuer>
                </observers>
            </sales_model_service_quote_submit_failure>
            <checkout_submit_all_after>
                <observers>
                    <eb2ccore_clear_session_quote>
                        <class>eb2ccore/observer</class>
                        <method>clearSession</method>
                        <type>singleton</type>
                    </eb2ccore_clear_session_quote>
                </observers>
            </checkout_submit_all_after>
            <ebayenterprise_order_create_ship_group>
                <observers>
                    <eb2ccore_order_create_ship_group_chargetype>
                        <type>model</type>
                        <class>EbayEnterprise_Eb2cCore_Model_Observer</class>
                        <method>handleShipGroupChargeType</method>
                    </eb2ccore_order_create_ship_group_chargetype>
                </observers>
            </ebayenterprise_order_create_ship_group>
        </events>
    </global>
    <admin>
        <routers>
            <adminhtml>
                <args>
                    <modules>
                        <EbayEnterprise_Eb2cCore after="Mage_Adminhtml">EbayEnterprise_Eb2cCore</EbayEnterprise_Eb2cCore>
                    </modules>
                </args>
            </adminhtml>
        </routers>
    </admin>
    <adminhtml>
        <layout>
            <updates>
                <eb2ccore>
                    <file>eb2ccore.xml</file>
                </eb2ccore>
            </updates>
        </layout>
        <translate>
            <modules>
                <EbayEnterprise_Eb2cCore>
                    <files>
                        <default>EbayEnterprise_Eb2cCore.csv</default>
                    </files>
                </EbayEnterprise_Eb2cCore>
            </modules>
        </translate>
    </adminhtml>
    <default>
        <eb2ccore>
            <api>
                <key backend_model="adminhtml/system_config_backend_encrypted"/>
                <major_version>1</major_version>
                <minor_version>0</minor_version>
                <region>na</region>
                <xml_namespace><![CDATA[http://api.gsicommerce.com/schema/checkout/1.0]]></xml_namespace>
                <xsd_path><![CDATA[app/code/community/EbayEnterprise/Eb2cCore/xsd]]></xsd_path>
                <default_status_handlers>
                    <loud>
                        <alert_level>loud</alert_level>
                        <status>
                            <no_response>
                                <logger>warning</logger>
                                <callback>
                                    <type>helper</type>
                                    <class>eb2ccore/api_action</class>
                                    <method>displayDefaultMessage</method>
                                </callback>
                            </no_response>
                            <server_error>
                                <logger>warning</logger>
                                <callback>
                                    <type>helper</type>
                                    <class>eb2ccore/api_action</class>
                                    <method>displayDefaultMessage</method>
                                </callback>
                            </server_error>
                        </status>
                    </loud>
                    <silent>
                        <alert_level>silent</alert_level>
                        <status>
                            <no_response>
                                <logger>warning</logger>
                                <callback>
                                    <type>helper</type>
                                    <class>eb2ccore/api_action</class>
                                    <method>returnEmpty</method>
                                </callback>
                            </no_response>
                            <server_error>
                                <logger>warning</logger>
                                <callback>
                                    <type>helper</type>
                                    <class>eb2ccore/api_action</class>
                                    <method>returnEmpty</method>
                                </callback>
                            </server_error>
                            <client_error>
                                <logger>critical</logger>
                                <callback>
                                    <type>helper</type>
                                    <class>eb2ccore/api_action</class>
                                    <method>throwException</method>
                                </callback>
                            </client_error>
                            <success>
                                <logger>info</logger>
                                <callback>
                                    <type>helper</type>
                                    <class>eb2ccore/api_action</class>
                                    <method>returnBody</method>
                                </callback>
                            </success>
                        </status>
                    </silent>
                </default_status_handlers>
                <test_connection_status_handlers>
                    <alert_level>silent</alert_level>
                    <status>
                        <no_response>
                            <logger>info</logger>
                            <callback>
                                <type>helper</type>
                                <class>eb2ccore/api_validator</class>
                                <method>returnInvalidHostnameResponse</method>
                            </callback>
                        </no_response>
                        <server_error>
                            <logger>info</logger>
                            <callback>
                                <type>helper</type>
                                <class>eb2ccore/api_validator</class>
                                <method>returnUnknownErrorResponse</method>
                            </callback>
                        </server_error>
                        <client_error>
                            <logger>info</logger>
                            <callback>
                                <type>helper</type>
                                <class>eb2ccore/api_validator</class>
                                <method>returnClientErrorResponse</method>
                            </callback>
                        </client_error>
                        <success>
                            <logger>info</logger>
                            <callback>
                                <type>helper</type>
                                <class>eb2ccore/api_validator</class>
                                <method>returnSuccessResponse</method>
                            </callback>
                        </success>
                    </status>
                </test_connection_status_handlers>
            </api>
            <feed>
                <destination_type>MAILBOX</destination_type>
                <filetransfer_protocol>sftp</filetransfer_protocol>
                <filetransfer_sftp_auth_type>pub_key</filetransfer_sftp_auth_type>
                <!--
                Archive directories for all acknowledged imported and exported files
                -->
                <import_archive>ExchangePlatform/Feed/archive/import</import_archive>
                <export_archive>ExchangePlatform/Feed/archive/export</export_archive>
                <processing_directory>ExchangePlatform/Feed/processing</processing_directory>
                <filetransfer_imports>
                    <acknowledgements>
                        <!-- Local directory is relative to Magento's 'var' directory -->
                        <local_directory>ExchangePlatform/Feed/inbox/ack</local_directory>
                        <remote_directory>/Inbox</remote_directory>
                        <local_error_directory>ExchangePlatform/Feed/error</local_error_directory>
                        <file_pattern>*Ack*.xml</file_pattern>
                    </acknowledgements>
                </filetransfer_imports>
                <filetransfer_exports>
                    <acknowledgements>
                        <!-- Local directory is always relative to Magento's configured 'var' directory. -->
                        <local_directory>ExchangePlatform/Feed/outbox/ack</local_directory>
                        <remote_directory>/Inbox</remote_directory>
                        <!--
                        Sent acks can go straight to archive as there will never be
                        a received ack for a sent ack nor will we ever need to resent them.
                        -->
                        <sent_directory>ExchangePlatform/Feed/archive/export/ack</sent_directory>
                        <filename_format>ack_{eventtype}_{clientid}_{storeid}_{timestamp}.xml</filename_format>
                        <timestamp_format>YmdHis</timestamp_format>
                        <xsd>AcknowledgementV11.xsd</xsd>
                    </acknowledgements>
                    <error_confirmations>
                        <local_directory>ExchangePlatform/Feed/outbox/error</local_directory>
                        <remote_directory>/</remote_directory>
                        <!--
                        Sent error confirmations can go straight to archive as there will
                        never be a received ack for a sent error confirmation nor will we
                        ever need to resent them.
                        -->
                        <sent_directory>ExchangePlatform/Feed/archive/export/error</sent_directory>
                        <filename_format>{client_id}_{catalog_id}_{store_id}_errorconfirmation_{feed_type}_{time_stamp}.xml</filename_format>
                        <xsd>ErrorConfirmationV11.xsd</xsd>
                    </error_confirmations>
                    <!--
                    This outbox can be used for any other files that need to be exported.
                    This should largely prevent other modules from needing to provide
                    any further export configuration and provide a single known point
                    for all export configuration.
                    -->
                    <eb2c_outbox>
                        <local_directory>ExchangePlatform/Feed/outbox/</local_directory>
                        <remote_directory>/</remote_directory>
                        <sent_directory>ExchangePlatform/Feed/sent/</sent_directory>
                    </eb2c_outbox>
                </filetransfer_exports>
                <header_template><![CDATA[<MessageHeader>
        <Standard>{standard}</Standard>
        <HeaderVersion>{header_version}</HeaderVersion>
        <VersionReleaseNumber>{version_release_number}</VersionReleaseNumber>
        <SourceData>
            <SourceId>{source_id}</SourceId>
            <SourceType>{source_type}</SourceType>
        </SourceData>
        <DestinationData>
            <DestinationId>{destination_id}</DestinationId>
            <DestinationType>{destination_type}</DestinationType>
        </DestinationData>
        <EventType>{event_type}</EventType>
        <MessageData>
            <MessageId>{message_id}</MessageId>
            <CorrelationId>{correlation_id}</CorrelationId>
        </MessageData>
        <CreateDateAndTime>{create_date_and_time}</CreateDateAndTime>
    </MessageHeader>]]></header_template>
            </feed>
            <service>
                <order>
                    <timeout>15</timeout>
                </order>
                <payment>
                    <timeout>17</timeout>
                </payment>
                <inventory>
                    <expiration>15</expiration>
                    <is_backorderable>1</is_backorderable>
                    <is_use_street_date_as_edd_date>1</is_use_street_date_as_edd_date>
                    <to_street_date_range>3</to_street_date_range>
                </inventory>
            </service>
            <shipping>
                <virtual_shipping_method_id>ANY_EMAIL</virtual_shipping_method_id>
                <virtual_shipping_method_description>E-mail Delivery</virtual_shipping_method_description>
            </shipping>
        </eb2ccore>
        <filetransfer>
            <registry>
                <eb2ccore_filetransfer_registry>eb2ccore/feed</eb2ccore_filetransfer_registry>
            </registry>
        </filetransfer>
    </default>
    <phpunit>
        <suite>
            <modules>
                <EbayEnterprise_Eb2cCore/>
            </modules>
        </suite>
    </phpunit>
</config>
